1. commentid라는 값을 별도로 생성 후 comment와 post에서 해당 id의 파라미터를 가지고 1차로 데이터를 비교합니다.
그 후 db에 넣어줄 json은 body형식으로 지정해 body항목에 넣고 선더볼트에서 json데이터를 추가하여 send로 통신을 확인합니다.

2. Get은 데이터를 조회할 때, Post는 데이터를 추가할 때, Put은 데이터를 수정할 때, Delete는 데이터를 삭제할 때 사용했습니다..만 Put부분은 제대로 구현이 되지 않은 것 같습니다.

3. RESTful한 API는 아닌 것 같습니다. 데이터의 추가, 조회, 삭제는 가능하나 수정이 불가능하며, 게시물 등록 부분은 미완성 상태입니다..

4. 추후 데이터의 수정, 유지보수 측면에서 파일에 데이터를 추가할 때나 새로운 변수를 추가, 수정, 삭제해야 할 일이 있을 때 빠르게 대응할 수 있습니다.

* 깃허브 코드는 최신화해둔 상태입니다.
* 과제코드는 우분투에서 sudo pull git을 통해 깃허브의 데이터는 받아왔으나 서버를 재시작하지않아 코드가 반영되지 않은 상태입니다.
> 우분투 서버, 깃허브 코드 모두 강의의 예제 코드를 상당부분 참고하여 구현했습니다.
> 댓글 부분의 추가, 조회, 삭제 부분만 구현된 상태입니다. 
> 구현 후 댓글 수정, post구현을 혼자 힘으로 해보려고했으나 댓글 부분에서도 계속 에러가 발생하고 발생한 에러를 수정하는데 너무 많은 시간이 들어가서 못했습니다 ㅠㅠ
